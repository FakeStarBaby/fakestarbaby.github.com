<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SCRABBLE&#9734;NOTE]]></title>
  <link href="http://FakeStarBaby.github.com/atom.xml" rel="self"/>
  <link href="http://FakeStarBaby.github.com/"/>
  <updated>2012-04-05T23:14:35+09:00</updated>
  <id>http://FakeStarBaby.github.com/</id>
  <author>
    <name><![CDATA[Yoshinori Hirasawa a.k.a. fakestarbaby]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[プログラマーの技術情報を記録するアプリKobitoが素晴らしい！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/04/02/awesome-app-kobito/"/>
    <updated>2012-04-02T12:41:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/04/02/awesome-app-kobito</id>
    <content type="html"><![CDATA[<p>皆さんは、プログラミングに関する知識をどうやって蓄積していますか？私は、ずっとEvernoteに蓄積していたんですが、つい最近から<a href="http://kobitoapp.com/">Kobito</a>へ乗り換えました。今回は、このKobitoについて、少し紹介したいと思います。</p>

<!-- more -->


<h2>Kobito</h2>

<p><a href="http://kobitoapp.com/">Kobito</a>とは、プログラミングに関する知識を記録、共有する最適なサービス<a href="http://qiita.com/">Qiita</a>のチームによって開発中のMacクライアントアプリです。2012/04/01の現在では、先行ユーザーのみ利用する事が可能で、４月上旬にリリースが予定されています。</p>

<h2>主な機能</h2>

<p>Kobitoは、プログラマーの技術情報の記録と共有に特化しています。主な機能は、以下の通りです。</p>

<ul>
<li>Markdown記法を用いたメモと即時プレビュー機能</li>
<li>コードのシンタックスハイライト機能</li>
</ul>


<h2>Kobitoが素晴らしい理由</h2>

<p>Kobitoを利用すると分かりますが、非常にシンプルな作りとなっています。UIも目立ったデザインではありませんし、斬新な機能が搭載されている訳でもありません。では、何がそんなに素晴らしいのでしょう？私の中で、Kobitoが素晴らしいと思う理由はただ一つです。</p>

<h3>・プログラマーの技術情報のメモをストレス無く簡単に取れるから</h3>

<p>私はKobitoが使いたい訳ではなく、技術情報をメモして残しておきたいだけです。Kobitoは、必要以上にそのエディターとしての存在をアピールしません。それくらい、UIが非常にシンプルに設計されており、『メモを書く』事だけに集中させてくれます。シンタックスハイライトもサポートされているし、何よりアプリ自体の動作が軽いので使いやすいのです。</p>

<p>Evernoteは、必要以上にメモの体裁を整える事が可能です。技術情報をメモして残しておきたいだけの場合、そこまでの機能は必要ありません。そもそも、何故、メモを取るのかと言うと、すぐ忘れるからです。忘れる事を前提にしている為、メモをしておいて後で見返す訳です。必要以上に体裁を整える事よりも、メモをするという行為自体をスピードアップし、いつでも見返したい時にすぐ取り出せるようにした方が効率的です。</p>

<p>Markwodn+シンタックスハイライトという非常に一般的な既存技術を組み合わせただけのソリューションですが、私の中では現時点で最強のメモアプリです。</p>

<h2>Qiitaチームが目指す未来予想図</h2>

<p>プログラマーは誰でも、メモの一つや二つは隠し持っていると思います。何故、それを皆で共有しないんだろうか？もっと積極的に自分が持つメモを共有した方が、プログラマー全員が幸せになれるのではないか？壁にブチ当たる度にググって、あちこちのサイトを彷徨うより、1箇所に全ての技術情報が集約されている方が幸せではないだろうか？Qiitaチームは、このような問題を解決すべく、その為の環境作りをしているのではないかと勝手に予想しています。今後に期待ですね。</p>

<h2>まとめ</h2>

<p>『全てはプログラマーが幸せになる為に！』</p>

<p>そんな熱いメッセージがQiitaやKobitoからは感じられます。やっぱり、プロダクトに愛って宿るんだなーって、しみじみと感じている今日この頃です。皆さんも、Kobitoがリリースされたら、是非使ってみて下さい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[『第4回 SFNewTech Japan Night 東京セミファイナル』を観覧して来ました！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/03/31/sfnewtech-japan-night-tokyo-semi-final/"/>
    <updated>2012-03-31T01:13:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/03/31/sfnewtech-japan-night-tokyo-semi-final</id>
    <content type="html"><![CDATA[<p>2012/03/30(金)に開催された『<a href="http://sfjapannight.com/jn4-02.php">第4回 SFNewTech Japan Night 東京セミファイナル</a>』を観覧して来ました。
場所は皆さんお馴染み、VOYAGE GROUPさんです。</p>

<!-- more -->


<h2>SFNewTech Japan Night</h2>

<p>このイベントは、『日本からオリジナリティの高いWebサービスをもっと世界へ発信する！』という想いから始まったイベントです。スタートアップ企業が自らのサービスをアメリカのVCに対してプレゼンし、勝者はサンフランシスコにて行われる本戦に出場する権利が得られるそうです。このイベントによる過去の<a href="http://sfjapannight.com/reviews.php">出場企業の実績</a>も見れるみたいです。</p>

<h2>当日</h2>

<p>いや、実は全く認知していないイベントだったのですが、相棒に一緒に行かないか？と誘われたので行ってみました。
やや遅れて会場入りするも、既に、大勢の人が集まっていて盛り上がっていました。</p>

<p>当日の様子は、『<a href="https://twitter.com/#!/search/realtime/%23SF_JPN">#SF_JPN</a>』のハッシュタグで確認してみて下さい。</p>

<h3>パネルディスカッション</h3>

<p>まずは、孫泰蔵さん、本間真彦さん、上杉周作さん、ブランドン・片山・ヒルさんによるパネルディスカッションでした。テーマは、『今グローバル起業家に求められる要素』です。その中でも特に気になった点だけ幾つか挙げてみます。</p>

<h4>・そろばんに価値は無い</h4>

<p>孫泰蔵さんのお兄さんである孫正義さんのエピソードです。孫正義さんが小学生の頃は、そろばん塾へ通うのが当たり前な時代だったそうです。そんな当たり前の状況下、孫正義さんは敢えてそろばん塾には通いませんでした。理由は単純明快で、自分が大人になった時、こんなそろばんを使って計算しているなんて有り得ない！そんな事より、もっと大切な事に時間を割くべきだと考えていたからだそうです。自分の中で何が大事で、何がゴミかって話しですね。ゴミに時間を費やすくらいなら、もっと大切にすべきモノに時間を割くべきです。非常に共感しました。</p>

<h4>・クリエイティビティを鍛える環境</h4>

<p>海外のある小学校では、絶対的な正解が無い問題を解かせているそうです。正解が無い問題をどうやって解けば良いのか。これは自分の頭のクリエイティビティをフル回転させて、オリジナリティのあるアウトプットを出す訓練です。公文式で幼少を過ごした私には驚きでしたね。正解の無い問題を解く事ほど、難しい事は無いですよね。</p>

<h4>・英語版を先に開発すべし</h4>

<p>よくある日本企業は、日本のマーケットだけを見ているので、当然、日本版の開発を優先して実施します。その後、日本版を海外版へローカライズする訳ですが、ココが大抵上手く機能しないというお話しでした。日本版を開発する際に、どうしても日本向けに開発するという思考が働いてしまい、日本仕様になってしまうらしい。海外を視野に入れているのであれば、まず、最初に英語版を開発しなさい。それから、日本版へローカライズするのです。この視点は今まで無かったので、とても新鮮でした。何か開発する時は、念頭に置いて開発した方が良さそうです。</p>

<h3>プレゼン</h3>

<p>スタートアップ企業15社による5分間のプレゼン、その後、5分間だけVCからの質問に答えるという形式でした。</p>

<p>プレゼンはアメリカから来たVCに対して行うので、当然、全て英語。VCからの質問も英語だし、回答も英語。しかも、通訳は一切無し！という、英語さっぱりな私には敷居が高い感じがありましたが、日本語英語？であれば、なんとか聞き取れる事が判明しました。</p>

<p>実は、この手のプレゼン、俗に言う、エレベーターピッチを生で聞くという体験は初めてだったので、アジャイルサムライに出てくるエレベーターピッチを思い出しながら聞いていました。</p>

<p>で・・・結果的には、途中で抜けだしてしまったんですが、感じた事を書いておきます。</p>

<h4>問題に深く共感出来るかどうか</h4>

<p>どんなにそのサービスのアイデアが斬新で素晴らしくても、デザインがイケてても、そのサービスが解決しようとしている『問題』そのものに共感を持てなければ、人の心は動かせない、つまり、そのサービスを自分が利用するだけの価値は生まれて来ないなと思いました。全てのプレゼンを見た訳では無いのですが、少なくとも、自分は使わないだろうな、使っても一瞬で飽きるだろうなと。要は、私はターゲットユーザーでは無かったという事になります。実際、今までたくさんのサービスが生まれては触り、そして、触らなくなりました。人の時間は限られているので、そのサービスに割り当てられるだけの価値が無ければ、長く使ってもらう事も出来ませんよね。どれだけのターゲットユーザーが共感をし、そのサービスを愛してくれるかが肝ですね。</p>

<h2>まとめ</h2>

<p>何はともあれ、日本のスタートアップ企業の熱さは体感出来ました。私はエンジニアなので、開発という視点だけで見てみると、どれも素晴らしい出来だなと思いました。このイベントに参加して、もっともっと、日本からモンスター級のサービスが出てきて欲しいし、自分もその一端に少しでも関われたら良いなと思いました。</p>

<p>その為には、日々、修行が必要ですね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第1回 渋谷Edge Rails勉強会×株式会社ドリコム事例発表 + heroku de rails事例発表に参加したよ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/03/06/shibuyarails/"/>
    <updated>2012-03-06T23:45:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/03/06/shibuyarails</id>
    <content type="html"><![CDATA[<p>2012/03/06(火)にGMOさんで開催された、第1回 渋谷Edge Rails勉強会×株式会社ドリコム事例発表 + heroku de rails事例発表に参加したよ！</p>

<p>記念すべき第1回という噂を聞き付けて、これは是非出てみようと思って参加した。会場はとても広くてキレイで、もうここに住んで作業しちゃいたいくらいでしたね。で、集まった人数は約250人くらい？今年に入ってから色んな勉強会に出てきたけど、こんなにRailsやってる人が居たのかー！と衝撃を受けた。そして、そこに紛れ込むいつもの勉強会の顔ぶれ。</p>

<!-- more -->


<h2>LT</h2>

<h3><a href="http://twitter.com/ppworks">@ppworks</a>さん</h3>

<p>「HerokuでRails3.2 - We love Heroku 開発事例」です。
スライドは<a href="http://speakerdeck.com/u/ppworks/p/we-love-heroku">こちら</a>。</p>

<p><a href="http://welove.herokuapp.com/">We love Heroku</a>とは、<a href="http://twitter.com/ayumin">@ayumin</a>さんがボソッとツイートした一言をきっかけに一夜にして<a href="http://twitter.com/ppworks">@ppworks</a>さんが作り上げたサービスで、Herokuを使ってるサービス、どんどん登録して紹介してこうよー！っていうサービスです。LT内容は、HerokuでRails3.2をやる場合、当然、StackはCedarだよねーとか、therubyracerは不要だよねーとか、これからHerokuでRailsする人には必須の知識を紹介していた。そして、最後に少しOpenGraphのお話し。あんまりFB周りに詳しくないので、あんまり理解出来なくてスマン。</p>

<h2>Edge Rails</h2>

<h3><a href="http://twitter.com/onk">@onk</a>さん</h3>

<p>「Rails3.2って何が変わるの？」のお話し。
スライドは<a href="http://www.slideshare.net/takafumionaka/rails32">こちら</a>。</p>

<p>まず、Development環境が超高速化した。これは今まで全ファイルを読み込んでいたのに対して、差分があったファイルのみを読み込むようにしたからだそうな。高速化が体感出来る程、早くなるとはちょっと試してみなくてはである。あと、ログにタギング出来るってのも追加されたらしいし、スロークエリーが出力されるようになってたりと、もう超高速で説明してくれて、Rails3.2、細かい所が改良されてて良い感じですね。他にもたくさん紹介して頂いたのだが、如何せん、量が多くて全て覚えきれなかった。後日、スライドをアップするそうなので、そちらを参照すると良いっすね。</p>

<h3><a href="http://twitter.com/arihh">@arihh</a>さん</h3>

<p>「ソーシャルアプリで使うjpmobileとガラケーからスマホへの対応」のお話し。</p>

<p>ソーシャルゲームのというお題だったけど、あんまり普通のjpmobileの扱い方の領域を出なかった感がある。でも、jpmobileを知らない人にとっては、ほぅほぅ、って感じだったのかな。自分は去年、jpmobileでガツガツ作ってた事があったので、それ程、新鮮味は無かったかもー。</p>

<h2>懇親会</h2>

<p>その後、ドリンクと軽食が出てきて懇親会。いや、太っ腹ですね、こんなに色々と無料で出してくれちゃって良いんですか？でも、一瞬で全て無くなった。</p>

<p>この時、<a href="http://twitter.com/ayumin">@ayumin</a>さんによるHerokuのLTも実施された。この中でHeroku使ってる人は？って問いに手を挙げたら、手を挙げた奴に要はないから後ろに引っ込めと誘導されたりとか。ついでにHerokuの名刺も頂きました。前回会ったHerokuのMeetupではSalesForceの名刺だったんですが、Herokuの名刺格好良いっす。</p>

<p>そして、いつも勉強会でよく会う人達と少し喋ってお開き！</p>

<h2>まとめ</h2>

<p>今回の収穫は何だろう？と考えると、<a href="http://twitter.com/ppworks">@ppworks</a>さんによる勇気と行動力だろうか。これはきっと、彼の才能なんだと思う。俺も勇気と行動力、意識して高めて行きたいわーって思った。</p>

<p>全然Rails関係ねーじゃん！でも、楽しかったから良し！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The RSpec Bookを読んだ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/03/06/the-rspec-book/"/>
    <updated>2012-03-06T23:41:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/03/06/the-rspec-book</id>
    <content type="html"><![CDATA[<p>やっぱり、ちゃんとテスト出来るようになりたいっていう一心で、The RSpec Bookを購入して読んでみた。</p>

<!-- more -->


<h2>RSpecの本ではありません！</h2>

<p>まえがきをすっ飛ばして読んでいたのだが、途中で「あれ、これRSpecの本じゃないな」とか思ったら、フォロワーさんからまえがき読みましたか？と。戻ってまえがきを読み返してみると、「これはRSpecの本ではありません」と書いてあるではないか！そう、RSpecの文法を覚えたくて購入したんだけど、前半は全然そんな類の話しが出てこないのだ。そもそも、テストを書くとはどういう事なのか、そこから丁寧に説明してくれる。感覚的にはRSpecよりも、もっと上のレイヤーから説明をしてくれていて、だんだんと深堀りしていく感じ。RSpecは手段であり、目的ではないという事を教えてくれる。</p>

<h2>テストとは何か分かる</h2>

<p>本質に迫る説明なので、テストについて包括的に学びたい時にもオススメ出来る。説明は段階を踏んでいるので、その時、どう考えるべきかといった視点も身に付くだろう。</p>

<h2>まとめ</h2>

<p>後は、これを読んだ結果をアウトプットとして、実際に試してみる事が課題だな。Webratについては、最新版と違う所もあるそうだし、最近はCapybaraの方が良いよという話しもあるそうだし、まだまだ、やる事が盛り沢山な感じですなー。</p>

<p>って事で、まだ読んでない人、特に、テストをまだ書いてない、書き方が不明、考え方が不明な人は是非、一度読んでみると収穫があると思う。特に自分の場合、RSpecだけの知識を期待して購入したので、意外な収穫があって得した気分になった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ワンクリックデプロイ勉強会に参加したよ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/03/06/ocdeploy/"/>
    <updated>2012-03-06T23:36:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/03/06/ocdeploy</id>
    <content type="html"><![CDATA[<p>2012/03/05(月)に横浜のアットウェアさんにて開催された、ワンクリックデプロイ勉強会に参加した！</p>

<p>当日使用されたスライドは<a href="http://www.slideshare.net/Ryuzee/101-10647187">こちら</a>。詳細は全てスライドに書いてあるので省略！一番印象に残った言葉についてだけ書く。</p>

<!-- more -->


<h2>当然という態度</h2>

<blockquote><p>『テスト自動化しないなんて、頭おかしいんじゃないですか？』</p></blockquote>

<p>ジョークのように聞こえるかもしれないが、これをサラっと言える、その感覚がスゴく大事だと思った。これは、テスト自動化する事を常識として捉えていて、テストを手動でやるという選択肢が無い事を意味している。もちろん、時と場合によって手動テストでないと困難なケースもあるだろうけどね。</p>

<h2>まとめ</h2>

<p>自分はまだ、この領域に手を出し始めたばかりで、その感覚には程遠い。テスト自動化するのが当たり前で、それが無いと不安に陥るくらい、自分の中に定着しないといけないと思った。話しはそれからだ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最高にクールなeラーニングサービスを知ってるかい？教えてあげよう！それは・・・！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/03/02/awasome-e-learning-service-code-school/"/>
    <updated>2012-03-02T22:00:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/03/02/awasome-e-learning-service-code-school</id>
    <content type="html"><![CDATA[<p>Code Schoolさー！知ってる人は知っている、海外の有名企業envylabsが絶賛提供中のeラーニングサービスである。</p>

<h2>Code School</h2>

<p>まずは、トップページをご覧頂こう。</p>

<!-- more -->


<p><img src="http://f.cl.ly/items/1b231y1i3J1H0K0X1n1A/codeschool_home.jpg" title="Code School Home" alt="Code School Home" /></p>

<p>Railsを世界にぶっ込んだ、あのDHHもこう言っている。</p>

<blockquote><p>『Code Schoolはマジでヤベェ・・・コイツは次世代の学習方法さ』</p></blockquote>

<p>Code Schoolは、Rails公式サイトでも紹介されてるので、お墨付きと言ってもいいだろう。では、何がそんなにヤベェのか？</p>

<h2>コンセプト</h2>

<p>Code Schoolのコンセプトはこうだ。</p>

<p>本を読むだけでは技術は身に付かない。実際にコードを書いてブラウザで確認する作業が必要だ。そして、その作業は楽しくあるべきだ。これを実現する為に生まれたCode Schoolの特徴を簡単にまとめるとこんな感じだ。</p>

<ul>
<li>特定のテーマ(Ruby/Rails/jQuery/CSS/Coffee…)単位で学習コースを受講可能で、無料と有料がある。</li>
<li>ブラウザでスクリーンキャストを視聴して理解した直後、すぐに問題にチャレンジして理解を深める。</li>
<li>スクリーンキャスト、スライドを入手可能。</li>
</ul>


<p>ふ～ん・・・という感じだろうか。ちょっと文面だけでは伝わりにくいかもしれない。個人的にCode Schoolが最高にクールだと思っている点は、テーマ毎に構築された世界観と、学習する際のゲーミフィケーションだ。</p>

<h2>提供されているコース</h2>

<p>では、Code Schoolで提供されている学習コースを見てみよう！</p>

<p><img src="http://f.cl.ly/items/2R02251E0M3933310H2e/codeschool_courses.jpg" title="Code School Courses" alt="Code School Courses" /></p>

<p>いっぱいあるー！</p>

<h2>Rails for Zombies</h2>

<p>今回は無料コースのRails For Zombiesについてご紹介しよう。</p>

<p><img src="http://f.cl.ly/items/362D1i0l2m2k171T2F00/codeschool_railsforzombies.jpg" title="Rails for Zombies" alt="Rails for Zombies" /></p>

<p>このコースはRailsの基本的な仕組みについて学習する事が出来るコースになっている。海外らしくゾンビを世界観にする事で、非常にクールでグロい感じになっているのが伝わってくる。始めに断っておくが、周りに人が居ない事を確認してから試す事をオススメする。俺みたいに電車内でゾンビ映像を垂れ流して、隣の人に白い目で見られてはイケナイ・・・。</p>

<p>コースを始めると最初に目にする画面はコレだ。</p>

<p><img src="http://f.cl.ly/items/3F1Z2l3s3t0406432Q2q/codeschool_railsforzombies_preview.jpg" title="First View" alt="First View" /></p>

<p>えぇ、グロいですが乗り越えましょう。最初だけです。コースは5つのレベルに分けられており、それぞれ、テーマ毎に学習する内容が異なっている。Rails For Zombiesは以下のようなレベル分けとなっている。</p>

<ul>
<li>Level1：CRUD</li>
<li>Level2：Model</li>
<li>Level3：View</li>
<li>Level4：Controller</li>
<li>Level5：Routing</li>
</ul>


<p>それぞれのレベルで5～10分程度のスクリーンキャストが用意されていて、クールな音楽と映像、そして、軽快な喋りで説明をしてくれる。もちろん、全て英語だが心配しなくても大丈夫！このスクリーンキャストは非常に分り易く出来ている為、見ているだけでも理解出来るようになっている。次世代の学習方法の一つとして、このようなインタラクティブなスクリーンキャストは個人的に注目。本を読んでいるだけでは味わえない、スッと理解出来るようなこの感覚は病みつきになる。</p>

<p>さて、スクリーンキャストを視聴して大体理解したら、次は実際にコードを書いて試す画面へ。</p>

<p><img src="http://f.cl.ly/items/413z0N1u3p1r12123E0R/codeschool_railsforzombies_play.jpg" title="Play View" alt="Play View" /></p>

<p>問題が出題されるので、正しいコードを書いて理解を深めるモードになる。問題数は学習コースによって異なる。問題って言ったって、スクリーンキャストを見ただけじゃ解けないよ！そんなに記憶力ねーよ！と嘆かなくても大丈夫！そんな貴方の為に、ヒント機能が搭載されている。各問題につき、2～3個のヒントが用意されていて、少しずつヒントを貰って頑張る！といった解き方が可能。但し、ヒントを貰うとスコアが減る。スコア？そう、スコアっていう概念がある。ノーヒントで全レベルの問題を解けばパーフェクト！ヒントを貰いまくってると、どんどんスコアは低くなる。これは単純に言えば成績みたいなもんだ。</p>

<p>そして、全ての問題を解くと次のレベルへ進めるような仕組みになっている。地味にバッチが貰えたりとか。簡単に説明すると、こんな流れになる。この時に視聴したスクリーンキャストとそのスライドはダウンロード出来るので、手元で確認する事も可能だ。これは嬉しい特典。</p>

<p>更に、学習コースをコンプリートすると、RailsTutorialの割引きが受けられたり、CodeSchoolの割引きが受けられたりもする。実に上手く出来てる。</p>

<p>有料の学習コースを単独で申し込む事も出来るが、月額で$25払えば全てのコースが遊べるようになる。更に、別枠で用意された単体のスクリーンキャストも閲覧可能になる。ホント、実に上手く出来てる。</p>

<h2>まとめ</h2>

<p>少しでも興味を持ったら試してみるべき！これは体験しないと分からない、そんな新しい学習方法だ。 一言で言えば、楽しい！ただ、それだけ。でも、楽しいの大事！</p>

<p>個人的にオススメしたいのは、Rails Best Practiceという学習コース。汚いコードがみるみるリファクタリングされ、美しいコードになる様は見ていて気持ち良い。これは本では味わえない感覚。</p>

<p>さぁ、今すぐ貴方も試してみよう！</p>

<p><a href="http://www.codeschool.com/">Code School</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[人間には見えるモノと見えないモノがある！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/29/visible-or-invisible/"/>
    <updated>2012-02-29T21:57:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/29/visible-or-invisible</id>
    <content type="html"><![CDATA[<p>つい最近、仲間内で集まって飲み会をしてた中で、面白い話題が挙がっていた。</p>

<h2>視界に入っていても見えていない</h2>

<p>同僚が電車をホームで待っている時、一番先頭で自分一人だけ並んでいたそうな。そこへ電車が来ると同時に、並んでる同僚を気にも止めずに、横からオバちゃん2人組が横入りして、そのまま電車へ乗車した。</p>

<p>まー、よくある話しだよね、横入りは。</p>

<!-- more -->


<p>そのオバちゃん達からしたら、既にホームで並んでる同僚は見えておらず、電車しか見えていなかった。一応、視界には入っているんだろうけど、見えてないんだよね。同じ空間に存在しているのに、人間によって見えてるモノが違うってのは奥深い。</p>

<p>これは日常の色んな場面でも言えるよね。</p>

<p>仕事で言えば、Aさんが作るべきだと認識していたモノと、Bさんが作るべきだと認識していたモノが違っていて、蓋を開けてみたら、結局どちらも作るべきモノが全く違っていたとか。</p>

<h2>まとめ</h2>

<p>何を見ているかが似ている同士が集まって何かをすると共感して楽しいし、話しもスムーズになる。似てない同士が集まって何かをすると発見があって楽しいけど、なかなか噛み合わなかったり。</p>

<p>今の俺も見えてないモノがたくさんあるんだろうなーとか、そのせいで損してたりするのかもなーとか、もっと視野を広げたいなーとか、ちょっとだけ思いを馳せてみましたです、ハイ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[すくすくスクラムに参加したよ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/28/suc3rum/"/>
    <updated>2012-02-28T21:48:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/28/suc3rum</id>
    <content type="html"><![CDATA[<p>2012/02/22(水)にVOYAGE GROUPで開催された、すくすくスクラムに参加したよ！</p>

<p>すくすくスクラムへの参加は初めてだったのだが、今回はアジャイルサムライの翻訳者である西村さん、角谷さんによるインセプションデッキのお話しだったのでShinjuku.rbを蹴ってまで参加した。Shinjuku.rbの皆様、申し訳ない。</p>

<!-- more -->


<h2>インセプションデッキ</h2>

<p>これには自分の経験と照らし合わせても、十分過ぎる程に共感した題材だ。昔の記事でも書いたが、一度サービスを作って失敗した経験があると、より一層、その大切さや有用性が身に染みて良く分かる。</p>

<p>という事で、これは是非とも話しを聞くべきだと思った。</p>

<h2>上手に作るコツ</h2>

<p>今回のセッションでは、インセプションデッキを上手に作るコツを紹介してくれた。</p>

<p>テーブルに座った人同志でワークショップを行いつつ、付箋を使ってインセプションデッキを体験するという感じ。一つのテーマにおいても、人が違うと意見も全然違う。皆がプロジェクトにおいて何を重要視しているのかも、全く異なる視点でこれは面白かった。</p>

<p>プロジェクトを始めるにあたって、一番自分が重要視すべきだと考えている事は、誰のどんな問題を、どうやって解決するのかという事だった。誰の問題も解決しないモノ、あってもなくてもどっちでも良いモノに価値は無いと思うようになったからだ。そう考えるようになったのは、リーンスタートアップのミートアップに参加してからだった。詳しくは、この<a href="http://www.slideshare.net/yujiakaba/ss-10251306">スライド</a>を。</p>

<p>とにかく、アジャイルサムライを読んでインセプションデッキに触れ、リーンスタートアップで問題解決の大切さに触れた時から、そう強く思うようになった。でも、実際には期間であったり、予算であったり、人員であったりと人によって回答は様々。やはり、自分が置かれている状況によって、見えているモノ、見ているモノが違うんだなと実感した。誰が合っていて、誰が間違ってるかじゃない。その人の状況によって異なるんだという客観的な視点から見た感覚が味わえた。</p>

<p>あと、スライドを作る為には、様々な情報が必要だという事と、プロジェクトについて真剣に向き合って皆で意見を出しあう事の大切さを学んだ。言いたい事が言い合える、良い事は良いって言えて、悪い事は悪いって言える、そんなチーム作りが大切だな。</p>

<h2>試しに作ってみた</h2>

<p>実は一度だけ、過去に携わったサービスについて、サービス完成後にインセプションデッキの一部を作成した事がある。</p>

<ul>
<li>我々はなぜここにいるのか。</li>
<li>エレベーターピッチ</li>
<li>パッケージデザイン</li>
</ul>


<p>結果、満足の行くスライドは出来上がらなかった。つまり、よく考え抜いておらず、浅はかでどうでも良いモノを作り出してしまっていたという事を身を持って体験した。ちゃんと考え抜いていればスライドは完成していたはずだと。</p>

<h2>まとめ</h2>

<p>次に何か作る時、インセプションデッキを活用して、自分が納得出来るモノ、皆が納得出来るモノ、共通認識を持った上でプロジェクトを進めたいと思った。</p>

<h2>余談</h2>

<p>VOYAGE GROUPへ遊びに行く時は、いつもフロアに置いてある金メダルを持って帰ってる。初めて金メダルを貰った時、自宅でチョコレートの箱の上に置いておいたら、娘と嫁さんがチョコと間違ってかじってしまったエピソードも。そして、この前、ディズニーランドに行った時、その金メダルを娘がコートに忍ばせていた事に気付いた時は驚いた。娘の完全なオモチャになってます。また、遊びに行った時は持って帰りますぜ。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[デブサミ2012に参加したよ！2日目！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/27/devsumi2012-second-day/"/>
    <updated>2012-02-27T21:45:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/27/devsumi2012-second-day</id>
    <content type="html"><![CDATA[<p>前回の続き。</p>

<!-- more -->


<h2>02/17(金)</h2>

<h3>【17-E-2】Ruby PaaS MOGOK ～ソフトウェアエンジニアのためのクラウドサービス～</h3>

<p><a href="http://togetter.com/li/257960">http://togetter.com/li/257960</a></p>

<p>どうもHerokuのようなプラットフォームがあるという噂を聞き付けて参加してみた。始まる前から、Herokuと比べた時の優位性について気になっていたが、現状は大差無かったようだし、将来的なビジョンも特に感じられず、Herokuで十分だなという印象だった。やっぱりビジョンは大事だ。誰の何が問題で、それをどうやって解決しようとしているのか、それに共感出来ない限り、興味が惹かれない。</p>

<h3>【17-B-5】アジャイルマニフェスト ディケイド</h3>

<p><a href="http://togetter.com/li/257827">http://togetter.com/li/257827</a></p>

<p>角谷さんのセッションを初めて聞いたけど、観衆を惹き付けるオーラがスゴイ。スライドもメリハリがあって、とても分り易くて楽しかった。セイヤーーー！！っと日々のあれやこれやにぶちかます精神を持つ事が大事だなと感じた。アジャイルはこの10年で現場に大分浸透して、今や当たり前になってきてはいるけど、人を取り巻く環境もそれぞれ違う。その中で何が出来るか、自分でもじっくり考えないといけないな。</p>

<h2>まとめ</h2>

<p>デブサミは去年に続いて2回目の参戦だった。雅叙園に来ると1年前の自分が思い出されて、それから自分はどう成長したかを実感出来る場となった。大丈夫、ちゃんと成長して一回り大きくなった自分がここにいる。そう感じられた事も、一つの大きな収穫になった気がする。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[デブサミ2012に参加したよ！1日目！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/27/devsumi2012-first-day/"/>
    <updated>2012-02-27T21:40:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/27/devsumi2012-first-day</id>
    <content type="html"><![CDATA[<p>2012/02/16(木)、17(金)に目黒雅叙園で開催された、Developers Summit 2012に参加した！去年初参加したので、今回は2回目の参加となる。</p>

<p>両日とも参加したが、外れセッションも幾つかあったので、特に自分が気になったセッションについてまとめる。</p>

<!-- more -->


<h2>02/16(木)</h2>

<h3>【16-A-1】見る前に翔べ！ ～ギークの工夫で社会を変えよう～</h3>

<p><a href="http://togetter.com/li/257694">http://togetter.com/li/257694</a></p>

<p>いわゆる最近のプロダクトリリースサイクルについてのお話し。アジャイルだとか、リーンだとか、その辺に関連する話しだったのだが、特に気になったフレーズだけ抜粋。</p>

<blockquote><p>『今日のユーザーの為ではなく、明日のユーザーの為に！』</p></blockquote>

<p>どうしても今目の前に居るユーザーの為にという思考に陥りがちだけど、明日のユーザーの為に価値を提供していく姿勢に共感した。</p>

<blockquote><p>『競合は想像もしていないような他業種である可能性が！』</p></blockquote>

<p>競合＝同業と考えがちだが、もっと大きな視点で見ると、色んな業種が絡み合って成立している事もあるというのは、結構衝撃的だった。</p>

<blockquote><p>『無駄な会議多過ぎじゃない？』</p></blockquote>

<p>激しく同意。会議をする事が目的になってはならない。</p>

<blockquote><p>『不連続へ挑戦する！』</p></blockquote>

<p>連続には安心感を覚えるよね。でも、時としてイノベーションを起こすには、敢えて不連続へ挑戦する事が大事。</p>

<blockquote><p>『来た道ばかりを気にする。本当は行き先の方が大事だ！』</p></blockquote>

<p>何処をどうやって通って来たか、今に繋がっている事もあって気にしがちだよね。過去より未来。</p>

<blockquote><p>『見る前に翔べ！あまり見過ぎると怖くて跳べなくなる！』</p></blockquote>

<p>これ、スゴく良い言葉だね。</p>

<h3>【16-B-2】Yahoo!アジャイルクロニクル ～コーチとエンジニアの体験記～</h3>

<p><a href="http://togetter.com/li/257818">http://togetter.com/li/257818</a></p>

<p>Yahoo!に買収されたアジャイルベンチャーが、現場にアジャイルを浸透させるまでの体験記。大きな企業では文化が根付いているはずで、プロジェクトの進め方を改革するのは相当な苦労だと思う。それを実際にやっているのは、単純にスゴイと感心した。</p>

<h3>【16-A-6】いまどきのi18nのはなし</h3>

<p><a href="http://togetter.com/li/257871">http://togetter.com/li/257871</a></p>

<p>一言で言えば、完全なる多言語サポートを実現するのは、相当な苦労が必要となる事かな。正直真剣に多言語サポートとか経験した事が無かったので甘く見ていたが、これほどまでにやるべき事があるのかと驚愕した。</p>

<h3>【16-B-7】デブサミオフィシャルコミュニティから選出のLT大会2012</h3>

<p><a href="http://togetter.com/li/257716">http://togetter.com/li/257716</a></p>

<p>色んなコミュニティのLTが聞けるという事で面白そうだったので参加してみた。初めてドラ娘のドラを目撃したけど、本当に容赦ないんすね。しかも、ほとんどの人が上手くまとめきれずに終了。一番楽しかったのは「こみゅぷらす」のLTですかね。テクニカルの話しではなかったけど、色々と勉強になる。</p>

<p><a href="http://www.slideshare.net/Fujiwo/20120216-developers-summit-2012-16b7-lt10-11669688">http://www.slideshare.net/Fujiwo/20120216-developers-summit-2012-16b7-lt10-11669688</a></p>

<h2>まとめ</h2>

<p>セッションの合間に勉強会で知り合った人達とランチしたり、元ボス＆同僚と会って話しをしたりして楽しい1日を過ごせたなー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shibuya.rbに初参加したよ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/16/shibuyarb/"/>
    <updated>2012-02-16T21:34:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/16/shibuyarb</id>
    <content type="html"><![CDATA[<p>2012/02/15(水)にVOYAGE GROUPさんで開催された、Shibuya.rbに初参加した。</p>

<h2>ソースコードリーディング</h2>

<p>今回はRackミドルウェアのソースコードリーディングというテーマで。おっと、そもそも、Rackについて詳しく知らないなーって思って、基礎知識は学習した上で望んだ。</p>

<!-- more -->


<h2>Chanko</h2>

<p>クックパッドさんが提供している<a href="https://github.com/cookpad/chanko">Chanko</a>のソースコードを読むチームへ参加した。Chankoは新機能を既存コードから出来るだけ切り離した状態で、本番環境にてユーザーのロールによって有効化、無効化を簡単に制御出来る。本番環境で試せるってのはメリットあるなと思う。</p>

<p>チーム内には、そもそも、Chankoがどういったモノなのか理解している人が居なかったので、まずは、Chankoを利用して作られている<a href="https://github.com/cookpad/chanko_sample">サンプル</a>を動かしてみよう！って事になった。</p>

<p>で、皆でローカルへ持ってきて動かしてみたんだけど、なんかログがダーっ！とスゴイ勢いで流れて不穏な雰囲気。でも、なんとなく画面は表示された。ChankoのREADMEを読めば分かるが、active_ifというメソッド内で機能の有効化、無効化が出来る。このサンプルではデフォルトでtrueになっている為、機能が有効になるじはずだが、これが何故か有効にならない。どうもRailsのバージョンが3.2なのがマズイらしく、3.1に落として実行すると正常に動作した。詳しくは下記を参照すると良い。</p>

<p><a href="http://d.hatena.ne.jp/InvokeTwoA/20120131">http://d.hatena.ne.jp/InvokeTwoA/20120131</a></p>

<p>なるほど、trueをfalseに変更すると機能が切り離される。ユーザーのロールの判別は、lib/chanko/active_if/active_if.rbにChanko::ActiveIf.defineで定義したモノを、active_ifで利用するんですねー。と、まぁ、Chankoの一部機能を理解するだけで、ほぼ終わってしまいました・・・。</p>

<h3>感想</h3>

<p>そもそも、自分はコードリーディング自体をそんなにやってない為、どう進めるべきかも分からずで。慣れてる人が居れば、少しは違った結果になったかもしれん。自分のレベルの低さが露呈したな。</p>

<p>あんまりインプット出来なくて悔しい思いはしたが、収穫はあった。まず、自分は想像以上にRuby分かってねーなー！という事。なんとなーくしか、ソースが追えない。これはイカン。もっと、ソースコード読まねば！という思いに駆られた事は収穫。これを機にChankoを読み進めてみるかと思ったら、既に<a href="http://a-newcomer.com/tags/chanko/">エントリー</a>が挙がっていましたね。慣れない内は、このエントリーを見ながらお勉強っすね。</p>

<h2>LT大会</h2>

<p>さて、途中でLTもありました。</p>

<h3><a href="http://twitter.com/kyanny">@kyanny</a>さんによるRemazeとSequelのお話し。</h3>

<p>詳しくは、ご本人の<a href="http://blog.kyanny.me/entry/2012/02/16/004715">エントリー</a>を参照。Remazeの存在すら知りませんでしたね。Sequelは何かの参考書に記述があったような気が。とにかく、どちらも手軽そうな感じですね。</p>

<h3><a href="http://twitter.com/joker1007">@joker1007</a>さんによるpryなお話し。</h3>

<p>詳しくは、ご本人の<a href="http://d.hatena.ne.jp/joker1007/20120215/1329327751">エントリー</a>を参照。pry良いですよね。なんで今までこーゆーの無かったのか不思議なくらいに便利。</p>

<h2>まとめ</h2>

<p>最後に、懇親会にも参加しましたが、皆色々と詳しくてスゲーなー！の一言。最近、業務でゴリゴリとコード書いてる訳でも無いし、差があって当然なんだけど。でも、逆にそれが刺激になって楽しい。そして、 @tyabe さんが同じ大学出身で同じ年齢で、同じキャンパスに居たという事実に驚いた。多分、一度くらいスレ違ってるだろうなー。</p>

<p>とても良い刺激になったので、また次回、Shibuya.rbに参加してみたいと思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku JP Meetup #3に参加したよ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/15/heroku-meetup-3/"/>
    <updated>2012-02-15T21:24:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/15/heroku-meetup-3</id>
    <content type="html"><![CDATA[<p>2012年02月14日(火)のバレンタインデーに開催された、HerokuのMeetupに参加した。会場は、なんとクックパッドさん！</p>

<p>早めに会場入りしたのだが、既にキッチンで何やら調理をしている様子。あぁ、良い匂いだー。コンビニのカップ麺でも、パスタでも無い、本物の料理の匂いだー。と感動しつつ、本編が始まった。</p>

<!-- more -->


<h2>Herokuとは何か</h2>

<p>最初は、Herokuから来た<a href="http://twitter.com/stolt45">@stolt45</a>さんのお話し。</p>

<p>Herokuとは何か、割りと包括的に説明をしてくれたが、如何せん英語が出来ない俺には壁が高かった。でも、スライドとか単語を拾って、なんとか言わんとしている事は理解出来たと思う。特に、設定ファイルをローカルに持ってくるコマンド「heroku config:pull」で持って来れるのは初耳だった。ちょっと、今度その辺じっくり試してみようと思う。</p>

<h2>SalesForceによるHerokuの位置付け</h2>

<p>次は、Herokuのエバンジェリストである<a href="http://twitter.com/ayumin">@ayumin</a>さんのお話し。</p>

<p>SalesForceにおいて、Herokuがどういう位置付けであるか、Herokuを利用したサービスはどんなのがあるのか紹介があった。Herokuもっともっと、盛り上がってくると良いですねー。</p>

<h2>Tresure Dataとは何か</h2>

<p>次は、Tresure Dataの<a href="http://twitter.com/muga_nishizawa">@muga_nishizawa</a>さんのお話し。</p>

<p>一言で言うと、ビッグデータをTresure Dataのサービスにぶち込めば、あんな事やこんな事の解析が簡単に出来ますよ！というサービスだと認識した。これがHerokuアドオンで提供されていて、今すぐにでも自分のアプリに付け足せる。アドオン便利、素晴らしい。Herokuのアドオンはまだまだ少ない気もするし、多分これからもっと増えてくだろうな。今が一番のビジネスチャンスかもしれないね。</p>

<h2>クックパッドさん</h2>

<p>次は、会場提供をしてくれたクックパッドさんのお話し。</p>

<p>自称まかないニート、料理は作らないけど食うよ！というポジションらしい<a href="http://twitter.com/sasata299">@sasata299</a>さんから、クックパッドに入るといかに楽しいか、力説してくれた。料理が出来る男って良いよね。俺も娘に美味しい料理を食わせてやりたい。</p>

<h2>LT大会</h2>

<p>こっからLT大会。</p>

<h3><a href="http://twitter.com/yotii23">@yotii23</a>さん</h3>

<p>句会っていう俳句のシステムをHerokuで構築してみたらしい。本番を稼働させるまでの時間が圧倒的に少ないのが、Herokuの魅力的な要素の一つだよね。個人的には一句読んでくれたらもっと面白かったかも。「Heroku ハーオークじゃないよ ヘロクだよ」みたいなつまらん一句でも。</p>

<h3><a href="http://twitter.com/jishiha">@jishiha</a>さん</h3>

<p>Herokuで簡単に動かせるLokkaのプラグインの作り方ですな。デモ動画を見たが、元々Rubyで出来ているCMSなので、プラグインの追加もめっちゃ簡単そうに見えた。Lokkaまだ触った事無いなー。</p>

<h3><a href="http://twitter.com/hakobera">@hakobera</a>さん</h3>

<p>HerokuでNode.jsの色んなバージョンを動かしちゃおうぜ！という感じ。Node.jsは全く知識が無いんだけど、どんなバージョンでも動きますよ！って言っていたので、Node.jsやってる人は果敢にチャレンジしたら良いのではと。</p>

<h3><a href="http://twitter.com/nalsh">@nalsh</a>さん</h3>

<p>RubyはどうやってCIしてんだ？っていう貴重なお話しだった。超ハックな感じがしてヘタレな自分にはよく分からなかったが、きちんとCIを回して、色んな環境にも耐えうるようにテストされてんだなーと感心した。</p>

<h3><a href="http://twitter.com/ppworks">@ppworks</a>さん</h3>

<p>彼は、<a href="http://twitter.com/ayumin">@ayumin</a>さんが夜にHerokuアプリのギャラリーサイトが欲しいとつぶやいた一言を、一晩にして実現してみせた強者。最近、よくTwitterで絡ませて貰ってるが、彼の実行力と行動力は本当見習いたいモノがある。今回はFacebookアプリをHerokuで構築した時のお話し。今のRailsなら、定番プラグインもたくさんあるし、結構さくさく作れちゃうよね。</p>

<h2>まとめ</h2>

<p>途中、クックパッドさんで用意してくれたお料理を挟んで、皆で美味しく頂きました。いやー、スゴイ美味しかったです！</p>

<p>Herokuと出会ってから、早1年くらいかな。自社のWEBサービスでも利用しているし、多分、今後個人で開発する時もお世話になるだろう。本質的じゃない部分にコストを掛けずに済む、開発に集中出来る、すぐスタートが切れるっていう所が好きだな。という事で、今後もHerokuを盛り上げて行きたいと思う。</p>

<p>これからもHerokuのワークショップとかを開催する予定もあるそうなので、機会と興味が合えば参加したいと思う。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby東京プレゼンテーション2012に参加した！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/04/ruby-tokyo-presentaion-2012/"/>
    <updated>2012-02-04T21:20:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/04/ruby-tokyo-presentaion-2012</id>
    <content type="html"><![CDATA[<p>2012/02/03(金)に、秋葉原で開催されたRuby東京プレゼンテーション2012に参加した。Rubyとは？というエンジニア向けの突っ込んだ内容ではなく、Rubyを取り巻く環境について、現在どうなっているのか、今後どうなって行くのか。Rubyを切り口として、色々と新しいビジネスを発見する場として提供された感じでしたね。</p>

<h2>感想</h2>

<p>一言で全体的な感想を言えば、う～ん・・・という感じだった。特にビジネス寄りのセッションは。多分、俺はメインターゲットじゃなかったんだろう・・・企業同士がコネクションを作る場だな、きっと。スーツ率も超高めだったし、完全アウェーだった。</p>

<p>登壇される方々のメンツもスゴかったのだが、如何せん、自己紹介タイムが長い。これだけで20分くらい使って、テーマに沿って議論するという本質的な時間もあんまり取れなくて残念だった。テーマ設定も大き過ぎるし、その割に議論する時間も少なかったしね。</p>

<!-- more -->


<h2>なぜ、Rubyか。</h2>

<p>これは開発コストが削減出来るからっていうのが多かった気がする。PHPやJava、Rubyを初心者に教えて、全く同じ仕様のモノを作らせたら、Rubyの開発コストだけ約半分だったそうな。それだけ、開発コストを抑えられるって、Rubyスゲーな！って思った。でも、俺はエンジニアなので、「開発コストが下がるぜ！」よりも先に「いや、楽しい～！」が来る。やっぱり、見ている視点が違うのかなーって感じた。</p>

<p>現状、Rubyは色々な業界で実際に使われ始めていて、今年からはRubyが特別じゃなくなるんじゃないか？と話していた。Javaみたいに定着して、どんどんRubyが流行ると良いっすね。</p>

<h2>軽量Ruby</h2>

<p>後は、軽量Rubyに少し未来を感じた。今年にはオープンソース化されるそうだが、現在開発中の軽量Rubyを実際に使って、どこまで組み込み可能なのか、研究をした結果の発表を見た。ヒーターをiPadから遠隔操作でオンオフしたり、自販機のランプ点灯を制御したり、ルーターからツイートしたり。全て組み込み部分に軽量Rubyが使用されていた。</p>

<p>大学卒業して最初に入った案件がCによる組み込み系だったんだけど、まさか、それをRubyで書ける日が来るなんて、ちょっと信じられない。まだまだ、これからって感じはするけど、Rubyの新しい未来を感じられた。Rubyが出来れば、WEBも組み込みも両方イケちゃいます！そんな未来が来るのかなーなんて。</p>

<h2>LT</h2>

<p>最後のLTは、Heroku、DoorKeeperが良かったかな。おー、やっと自分に関連する領域が来た！みたいな、「gem」って言葉、今日初めて聞いたぜ！みたいな感じ。</p>

<h2>まとめ</h2>

<p>色んな広告というか、宣伝的な部分も多かったので、半日割いて行く価値があるかと言うと、俺は完全に対象外だったな。こればっかりは行ってみないと分からないんだけど・・・。でも、ビジネス的なコネクションを作りたい人には良いかもね。</p>

<p>という訳で、Rubyの未来を感じた半日でした！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Agile渋谷に参加した！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/02/agileshibuya/"/>
    <updated>2012-02-02T21:15:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/02/agileshibuya</id>
    <content type="html"><![CDATA[<p>2012年に入って初めてのAgile渋谷に参加して来ました！参加者のほとんどは初めて参加する人達ばかりだったみたい。</p>

<p>さて、細かい内容の詳細は置いといて、自分が感じた事だけ書こう。</p>

<!-- more -->


<h2>スタンドアップミーティング</h2>

<p>やってる案件って結構あったけど、自分が喋る時以外は大体ボーッとしている人が多かったなー。そんな事してる暇があったら、さっさと自分のタスクを終わらしたいんだよ！みたいな。時間も区切らず、延々と報告し続けるだけとかは本当に害悪以外の何者でもない。そもそも、メンバー全員が、スタンドアップミーティングをやる価値を見い出せていないと、やる価値は無いよなーと。</p>

<h2>プランニング</h2>

<p>これは完全に現実とは掛け離れた夢がモリモリなスケジュール！って感じの所が多かったな。なんていうんだろう・・・もはや、現場の誰もがそのスケジュールに疑いの目を向けているというか。「小さなチーム、大きな仕事」でも書かれていたが、人間は見積もりが非常にヘタだと。俺が明日、何のジュースを飲むかなんて、今の時点で予想出来るわきゃーない。明日の気分にもよるし。人間なんて不完全なんだから、不完全な前提でプランニングすべきだよね。</p>

<h2>レトロスペクティブ</h2>

<p>いわゆる、振り返りってヤツ。舌を噛みそうで慣れないけど。たくさん受託開発をやったけど、これはあんまり見た事無かった。何が悪かったか、魔女狩りばっかりやってるような所はあった。そんな誰も得しない、無意味な事に時間を費やすのはアホらしい。どうせなら、次に繋がる施策を考えるべきだよね、成長するチャンスな訳だし。</p>

<h2>自己組織化ゲーム</h2>

<p>これは言葉ではなかなか説明出来ないけど、感覚は掴んだ。上手くやる為には、メンバー全員が自分以外のメンバーの事も考えて、自主的に行動しなければならない。まず、行動する事。行動しないと何も始まらないし、終わりもしない。次に、初回は物凄く苦戦する。多分、回数を重ねる毎に、どんどん早く終わらせられるはず。どんどん強いチームになる。感覚としては、チームビルディングに近いかな。これは大変面白くて興味深いので、すぐにでも体験してみて欲しい。</p>

<h2>まとめ</h2>

<p>と、いつもの調子で書き殴ってみた。アジャイル、アジャイルなAgile渋谷だったけど、自分的にはこの言葉に全てが集約されている気がしている。</p>

<blockquote><p>『Keep it fun !! more fun, more fun.』</p></blockquote>

<p>やっぱり、仕事は楽しくありたいわー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[記念すべき第1回Shinjuku.rbに参加したよ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/02/01/shinjukurb/"/>
    <updated>2012-02-01T21:08:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/02/01/shinjukurb</id>
    <content type="html"><![CDATA[<p>2012年1月に立ち上がったばかりのShinjuku.rb第1回に参加して来ました！</p>

<p>そもそも、Rubyコミュニティに顔を出す事自体が初めてだったので、どんな雰囲気なんだろーとか思ってたんだけど、結構楽しかったですね。</p>

<!-- more -->


<h2>LT大会</h2>

<p>最初は、LTから。</p>

<h3><a href="http://twitter.com/tatsuoSakurai">@tatsuoSakurai</a>さん</h3>

<p>関東近郊のRubyコミュニティのご紹介でした。自分が知らないだけだと思うけど、結構あるなーと感じた。</p>

<h3><a href="http://twitter.com/mewlist">@mewlist</a>さん</h3>

<p>Gemを作りたいって話し。あれ作ろう、これ作ろうと思って探し始めると大抵あるよね。RubyやRailsやり始めてから、ほとんど自前でライブラリ書かなくなった気がする。</p>

<h3><a href="http://twitter.com/ckazu">@ckazu</a>さん</h3>

<p>素人がRails開発をするまでの実体験。適切な時期に適切な部分を勉強すると、無理なく自分に落とし込めるそうな。確かに・・・・特に必要とされない時期にインプットしてもすぐ忘れるよね。これから、Rails開発を始めてみたいと思っている人とかにも分かりやすい説明でしたね。</p>

<h3><a href="http://twitter.com/jugyo">@jugyo</a>さん</h3>

<p>自作プラグインosx_dictのご紹介でした。MacOS Xの辞書でリファレンスを高速で引けるのだが、この辞書を自作するプラグインとの事。辞書でリファレンスを引くのは、以前自分も試した事があるけど実運用出来てない。ちょっと、時間がある時にでも試してみたいと思った。</p>

<h3><a href="http://twitter.com/udzura">@udzura</a>さん</h3>

<p>Sinatraの薄い本「Sinatra - Up and running」のご紹介でした。実際に書籍を持ち込んでくれたのですが、本当に薄い。Sinatra自体、そんなに書籍も出てないし、メインコミッターの人が著者なのでオススメらしい。</p>

<h2>Rails3レシピブック読書会</h2>

<h3>RVMでハマる</h3>

<p>後半戦は、Rails3レシピブックを皆で読み進めるって流れになったのだが、RVMのインストール辺りで、コマンドのヘルプを細かく見て行った為に、Railsのインストールまでも行かなかった。でも、ぶっちゃけ、必要に迫られなければ、あそこまでヘルプを見る事も無かっただろうし、知らずに損する事も実は多そうだなーって感じた。</p>

<h3>RVM is Ruby enViroment Manager</h3>

<p>RVMってRuby Version Managerだと勝手に思い込んでいたのだが、どうやら、最近になってRuby enViroment Managerの略称に変わったらしいという事に皆で気付いた。確かに、Rubyだけじゃなく、Gemsetの管理もしてますし・・・でも、結構無理がある感じが面白い。</p>

<h2>まとめ</h2>

<p>全体として、ゆる～い感じの勉強会の為、RubyやRailsはこれからだぜ！って人にもオススメかなーと。また、次回都合が付けば行きたいと思います。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大切にしたいモノがあるなら、身軽になるべき！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/01/30/throw-out-the-garbage/"/>
    <updated>2012-01-30T21:04:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/01/30/throw-out-the-garbage</id>
    <content type="html"><![CDATA[<p>どうも、最近めっきりエンジニア色が薄れてきたFakeStarBabyです。同僚がとても素晴らしいツイートをしたのでご紹介をしたいと思います。</p>

<!-- more -->


<h2>ゴミは捨てる</h2>

<blockquote><p>『自分にとって何が大事で何がゴミかってことだ。ゴミを捨てて、大事なものを大切に扱わないと、大切なものを本当に大事にはできなくなる。だから、選ぶことが必要。選べない状況にいるとき、人は多大なストレスを受ける。』</p></blockquote>

<p>人は常にたくさんの荷物を抱えている。自分の中では、きっと、何が大事で何がゴミなのか理解しているはずだ。だけど、ゴミをゴミとして扱って捨てる事を選択出来ず、結果、両手に抱えきれない程の荷物を抱えてしまい、大事なモノが両手から溢れ落ちてしまう。</p>

<p>取捨選択だ。</p>

<p>何かを得る為には、何かを捨てなければならない。なるべく、身軽でありたい。そして、ゴミはゴミ箱へきちんと捨てたい。そう思った。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小さなチーム、大きな仕事を読んだ！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/01/26/book-rework/"/>
    <updated>2012-01-26T20:59:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/01/26/book-rework</id>
    <content type="html"><![CDATA[<p>Ruby on Railsを生み出した37signalsが書き上げた成功の法則に関する書籍、「小さなチーム、大きな仕事」を読んだ。この書籍自体は結構前からあったんだけど、今回、イラストを収録して完全版として発売されたので、それをきっかけに購入してみた。</p>

<!-- more -->


<h2>感想</h2>

<p>小さなテーマ毎に、コンパクトに要点だけ上手くまとめていて、非常に読みやすい印象を受けた。こうあるべき！という37signalsならではの考え方に加えて、簡単な事例も合わせて掲載されているしね。全て読み終えた後の感想を一言で言うならば、「考えてみれば、当たり前の事」ですね。ここで重要なのは「考えてみれば」という所。</p>

<p>おそらく、ほとんどの話しは自分が気付かない内に、自分の中で常識として定着しているような話しだ。でも、本当はこうだと思わない？一度頭をリセットして、もう一度考えてごらん？と、この書籍は語り掛けてくる。</p>

<h2>胸打たれたフレーズ</h2>

<p>一番気に入ったフレーズは・・・</p>

<blockquote><p>『世界にささやかに貢献しよう』</p></blockquote>

<p>というフレーズ。</p>

<p>世界中をあっと驚かせるようなドリームじゃなくても良い、ささやかでも自分が世界に貢献しているんだという認識を持つ事で、自分がしている仕事に価値を見い出せるようになる。</p>

<h2>まとめ</h2>

<p>今、自分は世界に貢献出来ているだろうか・・・。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[アジャイルサムライ横浜道場に参加した！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/01/18/agilesamurai-yokohama-dojo/"/>
    <updated>2012-01-18T20:52:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/01/18/agilesamurai-yokohama-dojo</id>
    <content type="html"><![CDATA[<p>2012年01月17日(火)に横浜で初めて開催された、アジャイルサムライ横浜道場に参加しました。事前にある複数のテーマからディスカッションしたいテーマについて投票を行い、上位3つをワールドカフェ形式でディスカッションした。ディスカッションした内容の詳細は別のエントリーを見て頂くとして、ここでは、個人的に感じた事を書きたいと思う。</p>

<!-- more -->


<h2>アジャイル導入の障壁</h2>

<p>まず、アジャイルを導入する際の障壁についてだが、これは完全に人に依存する気がする。</p>

<p>ワークフローやレガシーシステムの影響で、なかなか導入する為の賛同が得られないという意見が幾つかあった。所詮システムなんて、その時代に適した形になっているだけであって、時代の流れと共に変化していくべきモノだと思ってる。人も同じ。この変化を柔軟に受け入れられる「柔らかい頭」を持っているかがどうかが重要で、今しか見てないのか、未来を見据えているのか、この視点の違いが障壁になっているのではないかと思った。</p>

<h2>変化を許容してくれる環境</h2>

<p>変化を求めるなら、変化を許容してくれる環境に身を移すのが一番手っ取り早いかもしれない。そもそも、こういった価値観を共有出来無い環境で仕事に取り組んでも、Betterなモノしか出来上がらないのではないか。俺は出来るならBestなモノを作りたい。このチームだからこそ作れたんだと胸を張れるモノを作りたいって思う。</p>

<p>アジャイルを導入するって事は、プラクティスを取り入れる、ツールを導入する事ではなくて、そのアジャイルさを関係者皆が理解して、率先してその環境に身を置く、変化を受け入れるって事なんではないかと思う。日々の仕事を楽しく、価値のある行動に転換し、皆が幸せになる為の一つの手法だと思う。</p>

<h2>まとめ</h2>

<p>今まで色んなプロジェクトに参加して来たが、どれも現実的でないやり方があたかも当たり前のように扱われていたが、それは今までの時代に合わせて作られたやり方だ。先人達が悩んで築き上げてきたモノだとは思うが、多くの開発者達がそのやり方に疑問を抱いている。上に立つ人間達は常識を一度捨て、現実を見つめ直し、今のやり方を追求するくらいのハングリー精神を持っていてもらいたいな。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails_configで環境毎に定数を管理しよう！]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/01/12/rails-config-how-to/"/>
    <updated>2012-01-12T20:42:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/01/12/rails-config-how-to</id>
    <content type="html"><![CDATA[<h2>rails_config</h2>

<p>定数を開発環境毎にYAMLファイルで管理出来るプラグイン。</p>

<!-- more -->


<h3>公式リポジトリ</h3>

<p><a href="https://github.com/railsjedi/rails_config">https://github.com/railsjedi/rails_config</a></p>

<h3>The Ruby Toolbox</h3>

<p><a href="https://www.ruby-toolbox.com/projects/rails_config">https://www.ruby-toolbox.com/projects/rails_config</a></p>

<hr />

<h3>Railsで試してみよう！</h3>

<p>Gemfileにrails_configを記述する。</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">gem</span> <span class="s1">&#39;rails_config&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>コンソールでコマンドを実行すると、必要となるYAMLファイル一式が自動生成される。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bundle install
</span><span class='line'><span class="nv">$ </span>rails g rails_config:install
</span><span class='line'>    create  config/initializers/rails_config.rb
</span><span class='line'>    create  config/settings.yml
</span><span class='line'>    create  config/settings.local.yml
</span><span class='line'>    create  config/settings
</span><span class='line'>    create  config/settings/development.yml
</span><span class='line'>    create  config/settings/production.yml
</span><span class='line'>    create  config/settings/test.yml
</span><span class='line'>    append  .gitignore
</span></code></pre></td></tr></table></div></figure>


<p>各種ファイルの役割は以下。</p>

<ul>
<li>config/initializers/rails_config.rb</li>
</ul>


<p>定義した定数にアクセスする為のクラス名称を定義する。デフォルトは「Settings」になっている。</p>

<ul>
<li>.gitignore</li>
</ul>


<p>ファイル名称に「local」が含まれるYAMLファイルは、全てローカル環境専用のファイルとみなされる為、これらのファイルをバージョン管理に含めないような定義が追記される。</p>

<ul>
<li>config/settings.local.yml</li>
</ul>


<p>ローカル環境専用のYAMLファイル。ローカル環境で動作させている場合は、全てのYAMLファイルに記述されている定数より優先して使用される。ローカル環境のみ、別の定数を割り当てたい時に使用する。</p>

<ul>
<li>config/settings.yml</li>
</ul>


<p>全ての環境(development/test/production)のベースとして使用される。環境に左右されない定数を定義したい時に使用する。</p>

<ul>
<li>config/settings/development.yml</li>
</ul>


<p>開発環境でのみ、別の定数を割り当てたい時に使用する。「config/settings.local.yml」との違いは、個々人のローカル環境毎に異なる定数なのか、開発環境毎に異なる定数なのかのみ。</p>

<ul>
<li>config/settings/test.yml</li>
</ul>


<p>テスト環境でのみ、別の定数を割り当てたい時に使用する。</p>

<ul>
<li>config/settings/production.yml</li>
</ul>


<p>本番環境でのみ、別の定数を割り当てたい時に使用する。</p>

<h3>利用方法</h3>

<p>利用する時は以下のような感じで。</p>

<figure class='code'><figcaption><span>config/settings.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">service_name</span><span class="p">:</span> <span class="s2">&quot;Service Name</span>
</span><span class='line'><span class="s2">service:</span>
</span><span class='line'><span class="s2">  tag_line: &quot;</span><span class="no">Rails</span> <span class="n">configuration</span> <span class="n">plugin</span><span class="s2">&quot;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>rails c
</span><span class='line'>
</span><span class='line'>1.9.2-head :001 &gt; Settings.service_name
</span><span class='line'>  <span class="o">=</span>&gt; <span class="s2">&quot;Service Name&quot;</span>
</span><span class='line'>1.9.2-head :002 &gt; Settings.service.tag_line
</span><span class='line'> <span class="o">=</span>&gt; <span class="s2">&quot;Rails configuration plugin&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>どんな感じ？</h2>

<p>同様の機能を持つsettings_logicというプラグインもあるが、こちらは各種ファイルの自動生成コマンドも用意されているし、ローカル環境専用ファイルも用意されているので非常に便利。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku Scheduler]]></title>
    <link href="http://FakeStarBaby.github.com/blog/2012/01/11/heroku-scheduler-how-to/"/>
    <updated>2012-01-11T20:24:00+09:00</updated>
    <id>http://FakeStarBaby.github.com/blog/2012/01/11/heroku-scheduler-how-to</id>
    <content type="html"><![CDATA[<h2>Heroku Scheduler</h2>

<p>Heroku上で10分、1時間、1日間隔でバックグラウンドジョブを実行出来る無料アドオンです。</p>

<!-- more -->


<h3>公式ドキュメント</h3>

<p>http://devcenter.heroku.com/articles/scheduler</p>

<h3>参考になるエントリー</h3>

<p>http://blogjp.sforce.com/2011/11/heroku-schedule-dc69.html
http://sadayuki.hateblo.jp/entry/2011/12/28/194235
http://d.hatena.ne.jp/ToMmY/20111121/1321802014</p>

<hr />

<h3>タスクを準備</h3>

<p>バックグラウンドで実行するタスクを用意します。</p>

<figure class='code'><figcaption><span>lib/tasks/scheduler.rake</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;This task is called by the Heroku scheduler add-on&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:create_sample</span> <span class="o">=&gt;</span> <span class="ss">:environment</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;fakestarbaby&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>タスクの詳細設定</h3>

<p>Heroku Schedulerアドオンを追加して、タスクを実行するように設定します。</p>

<p><img src="http://f.cl.ly/items/3w1z2k0o2P3M1M1T3k44/heroku_scheduler.jpg" title="Heroku Scheduler" alt="Heroku Scheduler" /></p>

<p>ここでは、タスクを「bundle exec rake create_sample」、間隔を10分に設定してみました。
後は、「Run」ボタンを押下すれば、バックグラウンドジョブが10分間隔で実行されるようになります。</p>

<h2>まとめ</h2>

<p>同様のHerokuアドオンとして提供されているHeroku Cronは、アドオンを追加したタイミングから1日間隔でしかバックグラウンドジョブを実行出来ないが、こちらは柔軟に間隔を任意選択出来るのでとっても便利だなーと思った。</p>
]]></content>
  </entry>
  
</feed>
